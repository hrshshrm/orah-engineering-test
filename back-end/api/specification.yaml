openapi: 3.0.3
info:
  title: Orah Engineering Test - Backend
  description: |-
    This is the Backend Engineering Test for Orah.

    Some useful links:
    - [The Test Repository](https://github.com/BoardingwareLtd/orah-engineering-test)
    - [The Solution Repository](https://github.com/hrshshrm/orah-engineering-test/tree/solution)
  termsOfService: https://www.orahapps.com/terms
  contact:
    email: sharmaharshy@gmail.com
  version: 0.0.1
externalDocs:
  description: Find out more about Orah
  url: https://www.orah.com/about
servers:
  - url: http://localhost:4001
tags:
  - name: student
    description: Student Lifecycle APIs
  - name: roll
    description: Roll Lifecycle APIs
  - name: student-roll-state
    description: Student-Roll-State Lifecycle APIs
paths:
  /student/get-all:
      get:
        tags:
          - student
        summary: Find all Students
        description: Finds the list of all students
        operationId: allStudents
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/StudentResponse'          
          '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /student/get-by-id/{id}:
    get:
      tags:
        - student
      summary: Find given Student
      description: Finds details of given students
      operationId: getStudent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentResponse'          
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /student/create:
    post:
      tags:
        - student
      summary: Create Student
      description: Create student with given details
      operationId: createStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /student/update:
    put:
      tags:
        - student
      summary: Update Student
      description: Update student with given details
      operationId: updateStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /student/delete/{id}:
    delete:
      tags:
        - student
      summary: Delete given Student
      description: Delete details of given students
      operationId: removeStudent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentResponse'          
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

  /roll/get-all:
      get:
        tags:
          - roll
        summary: Find all roll
        description: Finds the list of all roll
        operationId: allRolls
        responses:
          '200':
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RollResponse'
          '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /roll/create:
    post:
      tags:
        - roll
      summary: Create Roll
      description: Create Roll with given details
      operationId: createRoll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/RollResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /roll/update:
    put:
      tags:
        - roll
      summary: Update Roll
      description: Update given Roll with details
      operationId: updateRoll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RollResponse'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/RollResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /roll/delete/{id}:
    delete:
      tags:
        - roll
      summary: Delete given Roll
      description: Delete details of given Roll
      operationId: removeRoll
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/RollResponse'          
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  
  /roll/get-by-id/{id}:
    get:
      tags:
        - student-roll-state
      summary: Find all Student-Role-States
      description: Finds list of all Student-Role-States
      operationId: getStudentRollStates
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentRollStateResponse'          
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /roll/add-student-states:
    post:
      tags:
        - student-roll-state
      summary: Create Student-Role-States
      description: Create Student-Role-States with given details
      operationId: addStudentRollStates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StudentRollStateData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentRollStateResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /roll/add-student-roll-state:
    post:
      tags:
        - student-roll-state
      summary: Create Student-Role-State
      description: Create Student-Role-State with given details
      operationId: addStudentRollState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRollStateData'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentRollStateResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
  /roll/update-student-roll-state:
    put:
      tags:
        - student-roll-state
      summary: Update Student-Role-State
      description: Update given Student-Role-State with details
      operationId: updateStudentRollState
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRollStateResponse'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/StudentRollStateResponse'
        '400':
            description: Invalid Input value 
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'

components:
  parameters:
    id:
      name: id
      in: path
      description: id of the given entity
      required: true
      schema:
        type: string

  schemas:
    StudentData:
      type: object
      properties:
        first_name:
          type: string
          example: Name
        last_name:
          type: string
          example: Surname
        photo_url:
          type: string
          example: https://picsum.photos/200
    StudentResponse:
      allOf:
        - type: object
          properties:
            id: 
              type: integer
              example: 12
        - $ref: '#/components/schemas/StudentData'

    RollData:
      type: object
      properties:
        name:
          type: string
          example: Roll Name
        completed_at:
          type: string
          example: YYYY-MM-DD
    RollResponse:
      allOf:
        - type: object
          properties:
            id: 
              type: integer
              example: 12
        - $ref: '#/components/schemas/RollData'
        
    StudentRollStateData:
      type: object
      properties:
        student_id: 
          type: integer
          example: 1
        roll_id:
          type: integer
          example: 2
        state:
          type: string
          enum: [unmark, present, absent, late]
    StudentRollStateResponse:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              example: 12
        - $ref: '#/components/schemas/StudentRollStateData'
          
      

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: Error Message String

